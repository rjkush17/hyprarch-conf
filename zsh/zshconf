# ==========================================================
# HyprArch Zsh Shell File ||  ~/.config/zsh/.zshrc 
# ==========================================================

# ----------------------------------------------------------
# Auto run some command when start shell
# ----------------------------------------------------------
#
# Fetch paywal color in terminal
(cat ~/.cache/wal/sequences)
# Fastfetch for cool system info on shell start
sh ~/.config/Script/fastfetch_random.sh

# ----------------------------------------------------------
# Oh My Zsh Configuration
# ----------------------------------------------------------
export ZSH="$HOME/.oh-my-zsh"

# Theme
ZSH_THEME="powerlevel10k/powerlevel10k"

# Plugins
plugins=(
  git
  zsh-syntax-highlighting
  zsh-autosuggestions
)

# Load Oh My Zsh
source $ZSH/oh-my-zsh.sh

# ----------------------------------------------------------
# Powerlevel10k Instant Prompt (keeps shell fast!)
# ----------------------------------------------------------
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Load Powerlevel10k custom config if it exists
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# ----------------------------------------------------------
# Aliases - Quick Shortcuts & Fun Commands
# ----------------------------------------------------------

# Funny alias to replace sudo and pacman with "fucking"
alias fucking='sudo'
alias n="nvim"
# Quick up one directory
alias ..='cd ..'
# Jump to ~/.config
alias conf='cd ~/.config && cd'
# Shortcut for going to home directory
alias ~='cd ~'
# Clear terminal
alias c='clear'
# Open current directory in file manager
alias here='xdg-open .'
# Fast exit
alias q='exit'
# Find files by name
alias ffind='find . -iname'
# Show directory sizes sorted
alias dus='du -sh * | sort -h'
# Extract almost any archive
alias extract='a() { 
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1" ;;
            *.tar.gz)    tar xzf "$1" ;;
            *.tar.xz)    tar xf "$1" ;;
            *.bz2)       bunzip2 "$1" ;;
            *.rar)       unrar x "$1" ;;
            *.gz)        gunzip "$1" ;;
            *.tar)       tar xf "$1" ;;
            *.tbz2)      tar xjf "$1" ;;
            *.tgz)       tar xzf "$1" ;;
            *.zip)       unzip "$1" ;;
            *.Z)         uncompress "$1" ;;
            *.7z)        7z x "$1" ;;
            *) echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}; a'
# Show all aliases
alias aa='alias'
# show files and folders in color and icosn
alias ls="eza --icons=always --color=always"
alias ll="eza --long --icons=always --color=always"
alias lg="eza --long --git --icons=always"
alias lsa='eza --color=always --long --git --icons=always --time=modified --sort=name'

# ----------------------------------------------------------
# Ruby and rbenv shell Environment
# ----------------------------------------------------------

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init - bash)"

# ----------------------------------------------------------
# Setup fzf find auto complition and finds
# ----------------------------------------------------------

eval "$(fzf --zsh)"
# ---- Use fd instead of fzf ----
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# The first argument to the function ($1) is the base path to start traversal.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

# Fuzzy search and open project in Neovim

fp() {
  local proj
  proj=$(find ~/Projects -mindepth 1 -maxdepth 1 -type d -printf "%f\n" | fzf --height=40% --reverse --border) || return
  cd "$HOME/Projects/$proj" || return
  nvim .
}

flc() {
  local target
  target=$(find ~/.config -mindepth 1 -maxdepth 2 -type d -printf "%P/\n" -o -type f -printf "%P\n" \
    | fzf --height=40% --reverse --border) || return

  cd ~/.config || return
  nvim "$target"
}

# ----------------------------------------------------------
# Environment Variables
# ----------------------------------------------------------

# Node.js environment
export NODE_ENV=development
# Ruby on Rails environment
export RAILS_ENV=development

# ==========================================================
#              --- xxx END OF THE FILE xxx ---
# ==========================================================
